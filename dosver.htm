<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<head>
<title>DOS version information</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>
<table border="2" cellpadding="2" cellspacing="1" style="border-collapse:collapse;border:solid">
<thead>
<tr style="border-bottom:solid">
<th>Version</th>
<th> </th>
<th style="text-align:center">INT 21h fn 30h returns</th>
<th style="text-align:center">Comments</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.00</td>
<td> </td>
<td>N/A (AL=0)</td>
<td> </td>
</tr>
<tr>
<td>1.10</td>
<td>IBM</td>
<td>N/A (AL=0)</td>
<td>A non-zero value at PSP 12h (saved INT 24h vector) can be used to distinguish 1.1 from 1.0.</td>
</tr>
<tr>
<td>1.25</td>
<td>Microsoft</td>
<td>N/A (AL=0)</td>
<td>A non-zero value at PSP 12h (saved INT 24h vector) can be used to distinguish 1.25 from 1.0 but there is no way to distinguish 1.25 from 1.1 as they are functionally equivalent.</td>
</tr>
<tr>
<td>2.00</td>
<td> </td>
<td>2.00</td>
<td> </td>
</tr>
<tr>
<td>2.01</td>
<td>Microsoft</td>
<td>2.01</td>
<td> </td>
</tr>
<tr>
<td>2.10</td>
<td> </td>
<td>2.10</td>
<td> </td>
</tr>
<tr>
<td>2.11</td>
<td>Microsoft</td>
<td>2.11</td>
<td> </td>
</tr>
<tr>
<td>3.00</td>
<td> </td>
<td>3.00</td>
<td> </td>
</tr>
<tr>
<td>3.05</td>
<td>Microsoft</td>
<td>3.05</td>
<td> </td>
</tr>
<tr>
<td>3.10</td>
<td> </td>
<td>3.10</td>
<td> </td>
</tr>
<tr>
<td>3.20</td>
<td> </td>
<td>3.20</td>
<td> </td>
</tr>
<tr>
<td>3.21</td>
<td>Microsoft</td>
<td>3.21</td>
<td> </td>
</tr>
<tr>
<td>3.30</td>
<td> </td>
<td>3.30</td>
<td> </td>
</tr>
<tr>
<td>3.31</td>
<td>Compaq</td>
<td>3.31</td>
<td> </td>
</tr>
<tr>
<td>4.00</td>
<td> </td>
<td>4.00</td>
<td> </td>
</tr>
<tr>
<td>4.01</td>
<td> </td>
<td>4.00</td>
<td>PC DOS/MS-DOS 4.01 returns 4.00. There is no way to distinguish 4.01 from 4.00.</td>
</tr>
<tr>
<td>5.00</td>
<td> </td>
<td>5.00</td>
<td> </td>
</tr>
<tr>
<td>5.00.1</td>
<td>IBM</td>
<td>5.00</td>
<td>PC DOS 5.00.1 returns 5.00 revision 1 using INT 21h function 3306h.</td>
</tr>
<tr>
<td>5.02</td>
<td>IBM</td>
<td>5.02</td>
<td> </td>
</tr>
<tr>
<td>6.00</td>
<td>Microsoft</td>
<td>6.00</td>
<td> </td>
</tr>
<tr>
<td>6.10</td>
<td>IBM</td>
<td>6.00</td>
<td>PC DOS 6.1 returns 6.00. The OEM number can be used to distinguish PC DOS 6.1 (00h) from MS-DOS 6.0 (FFh).</td>
</tr>
<tr>
<td>6.20</td>
<td>Microsoft</td>
<td>6.20</td>
<td> </td>
</tr>
<tr>
<td>6.21</td>
<td>Microsoft</td>
<td>6.20</td>
<td>MS-DOS 6.21 returns 6.20. There is no way to distinguish 6.21 from 6.20.</td>
</tr>
<tr>
<td>6.22</td>
<td>Microsoft</td>
<td>6.22</td>
<td> </td>
</tr>
<tr>
<td>6.30</td>
<td>IBM</td>
<td>6.30</td>
<td> </td>
</tr>
<tr>
<td>7.00</td>
<td>IBM</td>
<td>7.00</td>
<td> </td>
</tr>
<tr>
<td>2000</td>
<td>IBM</td>
<td>7.00</td>
<td>PC DOS 2000 returns 7.00 revision 1 using INT 21h function 3306h.</td>
</tr>
<tr>
<td>7.10</td>
<td>IBM</td>
<td>7.10</td>
<td>The OEM number can be used to distinguish PC DOS 7.1 (00h) from MS-DOS 7.1 (FFh).</td>
</tr>
<tr style="border-top:solid">
<td>NTVDM</td>
<td>Microsoft</td>
<td>5.00</td>
<td>All versions of NTVDM return 5.00 using INT 21h function 30h but return 5.50 using INT 21h function 3306h.</td>
</tr>
<tr>
<td>7.00</td>
<td>Microsoft</td>
<td>7.00</td>
<td>DOS component of Windows 95 (MS-DOS 7.0).<br>
The OEM number can be used to distinguish PC DOS 7.0 (00h) from MS-DOS 7.0 (FFh).</td>
</tr>
<tr>
<td>7.10</td>
<td>Microsoft</td>
<td>7.10</td>
<td>DOS component of Windows 95 OSR 2, Windows 98 and Windows 98 SE (MS-DOS 7.1).<br>
The OEM number can be used to distinguish PC DOS 7.1 (00h) from MS-DOS 7.1 (FFh).</td>
</tr>
<tr>
<td>8.00</td>
<td>Microsoft</td>
<td>8.00</td>
<td>DOS component of Windows ME (MS-DOS 8.0).</td>
</tr>
</tbody>
</table>
<p><b>Notes:</b></p>
<ul>
<li>INT 21h function 30h was added in DOS 2.0 and returns the major version in AL, the minor version in AH, the OEM number in BH, and the 24-bit user serial number in BL:CX. The OEM number is 00h for IBM or FFh for Microsoft. OEMs may use other values. The user serial number is usually unused and returned as 0. This function is undefined in DOS 1.x and will return with AL=0.</li>
<li>In DOS 4.0x the version number returned by INT 21h function 30h is subject to an internal version "lie" table (the basis for SETVER) which returns fake version numbers for specific programs.</li>
<li>In DOS 5.0 and later the version number returned by INT 21h function 30h is subject to SETVER.</li>
<li>In DOS 5.0 and later if AL=1 on entry to INT 21h function 30h then a version flag indicating whether DOS is in ROM (08h) or not (00h) is returned in BH instead of the OEM number.</li>
<li>INT 21h function 3306h was added in DOS 5.0 which always returns the true DOS version. This function returns the major version in BL, the minor version in BH, the revision in DL, and the version flag in DH. Only PC DOS 5.00.1 and PC DOS 2000 return a non-zero revision. The version flag indicates whether DOS is in ROM (bit 3 set) or loaded in the HMA (bit 4 set).</li>
</ul>
</body>
